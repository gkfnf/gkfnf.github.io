<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fkbug</title>
    <link>http://fofa.run/</link>
    <description>Recent content on Fkbug</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Apr 2019 22:04:55 +0800</lastBuildDate>
    
	<atom:link href="https://fofa.run/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SQL 注入笔记</title>
      <link>https://fofa.run/post/sql_injection/</link>
      <pubDate>Tue, 30 Apr 2019 22:04:55 +0800</pubDate>
      
      <guid>https://fofa.run/post/sql_injection/</guid>
      <description> sql 基础知识 sql 语句基础 关键的表 关键的一些函数 sql 注入原理 常见 sql 注入分类  sql 注入 </description>
    </item>
    
    <item>
      <title>以病毒作者视角分析 GandCrab_V5.2 Ransomware</title>
      <link>https://fofa.run/post/gandcrab5-2/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://fofa.run/post/gandcrab5-2/</guid>
      <description>如何写一个勒索病毒?  我们来看看一个勒索病毒要实现的功能：
 正常功能 遍历文件:
不管什么语言，基本都是有遍历文件的api的，所以遍历文件通常调用一下api就好了，但是有时候对文件操作的api可能会被杀软拦截，所以有时候会考虑使用一些很奇葩、冷门的文件操作函数。
加密文件:
加密文件通常也是使用现成的加密算法，因为现成的加密算法方便快捷，同时为了保证加密强度，一般选用非对称加密的方式，RSA、AES，加密位数越长越好，但是为了保证加密的效率，也得进行权衡。同样，也是为了保证加密的效率，避免受害者察觉，通常采用多线程的方式，这也是为什么经常看见病毒创建互斥体的原因。
传输密钥:
当加密完文件以后，就需要考虑传输密钥的问题，作为一个勒索病毒，如果将密钥保存在本地，或者传输的过程中可以被抓包截获，那么基本是不可能收得到钱的。在前两年勒索病毒刚兴起的时候，会有一些能被直接解密，但是随着勒索病毒越来越规模化，勒索即服务越来越普遍，基本很少遇到可以直接被解密的情况了。
解密文件:
勒索病毒与以前的木马很大的不同在于，它是直接向受害者要钱的。所以也经常会有病毒直接内部就提供了解密的函数，这样受害者花钱买密钥之后就能立马解锁。而为了能安全的收钱，通常它会有自己专门的匿名服务器来接收加密后的密钥，同时为了区分这个密钥对应哪台被加密的机器，勒索病毒在开始加密前很大概率会去收集一下当前主机的信息，然后以随机数的方式生成一个 id 之类的、将密钥、机器信息绑定，以便在收取赎金的时候能很好的响应用户。
 以上，就是一个勒索病毒中与正常软件相似的功能，其实就是正常的加解密，这个在正常的软件里边都会有，就比如微信的聊天记录，就是一种加密后的缓存文件，接下来我们看看区分恶意与非恶意的地方
 恶意功能： 一个勒索病毒通常需要具备下边这些恶意功能，不然完全就勒索不起来
传播自身:
要传播自身，有很多种方式，而要大规模的传播，当然就不能把自己局限在一种传播方式，所以现在的病毒基本都会利用多种传播方式，传播这部分跟渗透其实是很类似的，对服务进行弱口令爆破，对端口进行弱口令爆破，利用最新的RCE漏洞，再加上一点点社工的东西，比如图标改成文件夹的样子这种最low的，或者是钓鱼邮件，诱导受害者运行的方式。
提升权限:
当我们的病毒传播感染到了一台主机以后，通常都需要在很高的权限下运行，同时为了避免被受害者意识到恶意，还需要 Bypass UAC 等系统方面的限制。一般而言，病毒会优先利用影响特别严重的RCE，这时候不需要再提权了。但是也经常会遇到感染到目标主机以后权限不够的问题，这时候就会去调用一些提权的api，或者去利用一些提权的漏洞
规避杀软:
然后是比较关键的规避杀软这一点。
杀软最开始的查杀机制是特征码，所以最开始的病毒随便改一下基本杀软就废了。
后来发展出了主防，所谓的主动防御其实就是 360 这些老流氓对操作系统内核做了 Hook，然后在内核的一些敏感 api 里边进行检测来鉴别当前行为是否适当，当然这也是各种杀软经常卸载不了的原因。同样，流氓软件的主页劫持这些也是通过加载驱动进行 Hook 来做的。那么这时候写病毒要怎么绕过杀软呢？
那时候最普遍的做法是利用一些 Widows 未导出的 api，就是去看 Wrk 或者参照 Win2000的源码，对比逆向内核文件，去找一些杀软没Hook过的 api，这也导致后边杀软Hook 的 api 越来越多，内核都被搞成筛子了，而病毒或者流氓软件也发展出了内核重载这样的技术，这方面的攻防一度让 Windows 系统变得极不稳定，所以后边 Win10 的时候微软直接出了新的补丁，加了许多内存保护机制，只要杀软做太多的Hook就被直接吊销签名。
为了解决这个问题，杀软发展出了利用 VT 技术占坑来防御，就是 360 的那个所谓的核晶防御，对这种防御方式的最简单的理解就是。 系统进 Bios 后先加载 360 的VT内核，运行在最高权限 Ring0，然后去加载操作系统内核，操作系统跑在 Ring3 权限，这样就相当于操作系统被当成一个虚拟机跑在 360 里边，所以对各种行为的监控就很简单了。这也是 360 经常说他又捕获了某某样本，某某在野 0Day 的原因。</description>
    </item>
    
    <item>
      <title>CVE-2018-20250 --&gt; WinRAR RCE 挖掘复现</title>
      <link>https://fofa.run/post/cve201820250/</link>
      <pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://fofa.run/post/cve201820250/</guid>
      <description>效果  WinRar 解析 ACE 压缩格式的库 UNACEV2.dll 自从 19 年前就没更新过了, 而该库未开启 ASLR 及 DEP 等保护措施，且 对文件路径的处理逻辑 存在安全隐患
隐患后果:
当对恶意的 .rar 压缩包进行 双击解压 或 解压到当前目录 时，恶意的压缩包可以释放恶意文件到Windows系统启动项， 在系统 重启后执行任意代码。
 Ref: &amp;nbsp; https://research.checkpoint.com/extracting-code-execution-from-winrar/
受影响软件:
 Winrar &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt; 5.70 Bandizip &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt; 6.21 2345 好压 &amp;nbsp;&amp;nbsp;&amp;lt; 5.9.8 360 压缩 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt; 4.1180 。。。  背景知识：  怎么被挖出来的？ 1. 信息搜集  通过原文可知，该漏洞的研究人员首先做了很多的信息搜集工作
下面是我按照个人的想法做的信息搜集
 基本信息搜集:
 程序功能:
 WinRar 是一款压缩软件，主要用于文件的压缩解压 WinRar 带有图形界面，未注册版本会弹广告 帮助文档  输入点分析:</description>
    </item>
    
    <item>
      <title>leetcode 刷题记录</title>
      <link>https://fofa.run/post/leetcode/</link>
      <pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://fofa.run/post/leetcode/</guid>
      <description>1. 两数之和 https://leetcode-cn.com/problems/two-sum/
 暴力解法: o(n^2)  class Solution: def twoSum(self, nums: List[int], target: int) -&amp;gt; List[int]: n = len(nums) for i in range(n): try: j = nums[i+1:].index(target-nums[i]) return [i, j+i+1] except Exception as e: pass  python3 执行用时: 1016ms 内存消耗: 13.6mb
class Solution(object): def twoSum(self, nums, target): &amp;quot;&amp;quot;&amp;quot; :type nums: List[int] :type target: int :rtype: List[int] n = len(nums) # python2 中 range 必需指定范围 for i in range(0, n): try: j = nums[i+1:].</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://fofa.run/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fofa.run/contact/</guid>
      <description>We are here to help you Are you curious about something? Do you have some kind of problem with our products? As am hastily invited settled at limited civilly fortune me. Really spring in extent an by. Judge but built gay party world. Of so am he remember although required. Bachelor unpacked be advanced at. Confined in declared marianne is vicinity.
Please feel free to contact us, our customer service center is working for you 24&amp;frasl;7.</description>
    </item>
    
    <item>
      <title>FAQ</title>
      <link>https://fofa.run/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fofa.run/faq/</guid>
      <description>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.
1. WHAT TO DO IF I HAVE STILL NOT RECEIVED THE ORDER? Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante.</description>
    </item>
    
  </channel>
</rss>
